<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<toolkitModel xmlns="http://www.ibm.com/xmlns/prod/streams/spl/toolkit" productVersion="3.2.0.0" xmlns:common="http://www.ibm.com/xmlns/prod/streams/spl/common" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <toolkit name="com.ibm.streamsx.bytes" requiredProductVersion="3.0.0" version="1.0.0">
    <description/>
    <uriTable>
      <uri index="2" value="com.ibm.streamsx.bytes/BytesParser"/>
      <uri index="1" value="com.ibm.streamsx.bytes/native.function/function.xml"/>
    </uriTable>
    <namespace name="com.ibm.streamsx.bytes">
      <primitiveOp language="Cpp" modelUriIndex="2" name="BytesParser" public="true">
        <description>This Operator parse a a input String that represents raw data (ASCII,Hexadecimal,Binary) and produce a map&lt;rstring,rstring&gt;. The content of the map match the definition of the message in the xml file {{"NAME","VALUE"}.....}

	&lt;?xml version="1.0" encoding="ISO-8859-1"?&gt;
	&lt;raws&gt;
	  &lt;raw id="1" name="SENSOR 1" length="4488" format="HEX"&gt;
	  	&lt;packet id="1" name="PROTOCOLE_TYPE" start="0" length="24" datatype="string"&gt;&lt;/packet&gt;
	  	&lt;packet id="100" name="DATA_1" start="2001" length="1" datatype="int"&gt;&lt;/packet&gt;
	  	&lt;packet id="500" name="VERSION" start="4400" length="8" datatype="hexword"&gt;&lt;/packet&gt;
	  	...
	  &lt;/raw&gt;	
	  &lt;raw id="2" name="SENSOR 2" length="100" format="BIN"&gt;
	  	....
	  &lt;/raw&gt;	
	&lt;/raws&gt;

      
      
      </description>
        <parameter cardinality="1" expressionMode="AttributeFree" name="file" optional="false" type="rstring">
          <description>The xml filename that contains the definition on how to extract data</description>
        </parameter>
        <parameter cardinality="1" expressionMode="Attribute" name="id" optional="false" type="">
          <description>The attribute that contains the id of raw data</description>
        </parameter>
        <parameter cardinality="1" expressionMode="Attribute" name="data" optional="false" type="">
          <description>The attribute that contains raw data</description>
        </parameter>
        <parameter cardinality="1" expressionMode="Expression" name="decoded" optional="false" type="rstring">
          <description>Attribute name for map that will contains decoded values</description>
        </parameter>
        <inputPort maxNumPorts="1" minNumPorts="1" optional="false" windowPunctInputMode="Oblivious">
          <windowPolicy>NonWindowed</windowPolicy>
        </inputPort>
        <outputPort expressionMode="Expression" maxNumPorts="1" minNumPorts="1" optional="false" windowPunctOutputMode="Generating"/>
      </primitiveOp>
      <function modelUriIndex="1" name="ASCIIToHexString" native="true" public="true" returnType="rstring" uriIndex="0">
        <description>Function that transform an ASCII string into it correspondant Hexadecimal string
        
        example : "IBM" -&gt; "49424D"</description>
        <prototype>public rstring ASCIIToHexString(rstring)</prototype>
        <parameter name="__p1" type="rstring"/>
      </function>
      <function modelUriIndex="1" name="ASCIIToBinaryString" native="true" public="true" returnType="rstring" uriIndex="0">
        <description>Function that transform an ASCII string into it correspondant Binary string
        
        example : "IBM" -&gt; "010010010100001001001101"</description>
        <prototype>public rstring ASCIIToBinaryString(rstring)</prototype>
        <parameter name="__p1" type="rstring"/>
      </function>
      <function modelUriIndex="1" name="HexStringToBinaryString" native="true" public="true" returnType="rstring" uriIndex="0">
        <description>Function that transform an Hexadecimal string into it correspondant Binary string
        
        example : "49424D" -&gt; "010010010100001001001101"</description>
        <prototype>public rstring HexStringToBinaryString(rstring)</prototype>
        <parameter name="__p1" type="rstring"/>
      </function>
      <function modelUriIndex="1" name="getIntStringFromBinary" native="true" public="true" returnType="rstring" uriIndex="0">
        <description>Function that transform an Hexadecimal string into it correspondant Binary string
        
        example : "49424D" -&gt; "010010010100001001001101"</description>
        <prototype>public rstring getIntStringFromBinary(rstring)</prototype>
        <parameter name="__p1" type="rstring"/>
      </function>
      <function modelUriIndex="1" name="getASCIIFromBinary" native="true" public="true" returnType="rstring" uriIndex="0">
        <description>Function that transform an Hexadecimal string into it correspondant Binary string
        
        example : "49424D" -&gt; "010010010100001001001101"</description>
        <prototype>public rstring getASCIIFromBinary(rstring)</prototype>
        <parameter name="__p1" type="rstring"/>
      </function>
      <function modelUriIndex="1" name="getASCIIWordFromBinary" native="true" public="true" returnType="rstring" uriIndex="0">
        <description>Function that transform an Hexadecimal string into it correspondant Binary string
        
        example : "49424D" -&gt; "010010010100001001001101"</description>
        <prototype>public rstring getASCIIWordFromBinary(rstring)</prototype>
        <parameter name="__p1" type="rstring"/>
      </function>
      <function modelUriIndex="1" name="getIntWordFromBinary" native="true" public="true" returnType="rstring" uriIndex="0">
        <description>Function that transform an Hexadecimal string into it correspondant Binary string
        
        example : "49424D" -&gt; "010010010100001001001101"</description>
        <prototype>public rstring getIntWordFromBinary(rstring)</prototype>
        <parameter name="__p1" type="rstring"/>
      </function>
      <function modelUriIndex="1" name="getHexWordFromBinary" native="true" public="true" returnType="rstring" uriIndex="0">
        <description>Function that transform an Hexadecimal string into it correspondant Binary string
        
        example : "49424D" -&gt; "010010010100001001001101"</description>
        <prototype>public rstring getHexWordFromBinary(rstring)</prototype>
        <parameter name="__p1" type="rstring"/>
      </function>
    </namespace>
  </toolkit>

</toolkitModel>

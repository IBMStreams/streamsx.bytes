namespace com.ibm.streamsx.bytes.sample;
//use com.ibm.streamsx.bytes::BytesParser;
use com.ibm.streamsx.bytes::*;
composite Converter {
	graph
		stream<rstring ascii> ASCII =Beacon(){
			param
				iterations:1u;
			output
				ASCII : ascii="IBM";
		}
		stream<rstring bin> BIN =Beacon(){
			param
				iterations:1u;
			output
				BIN : bin="010000010101010001000010";
		}
		stream<rstring hex> HEX =Beacon(){
			param
				iterations:1u;
			output
				HEX : hex="415442";
		}
		stream<rstring ascii,rstring binString,rstring hexString> ConvertFromASCII=Functor(ASCII){
			output
				ConvertFromASCII:binString=ASCIIToBinaryString(ascii),hexString=ASCIIToHexString(ascii);
		}
		stream<rstring ascii,rstring binString,rstring hexString> ConvertFromHex=Functor(HEX){
			output
				ConvertFromHex:ascii="ATB",binString=HexStringToBinaryString(hex),hexString=hex;
		}
//		stream<rstring hexString,rstring binString,rstring asciiString> ConvertFromHEX=Functor(ConvertFromASCII){
//			output
//				ConvertFromHEX:binString=HexStringToBinaryString(hexString),asciiString="";
//		}
		() as display=FileSink(ConvertFromASCII,ConvertFromHex){
			param
				file:"/dev/stdout";
				flush:1u;
				writePunctuations:false;
		}
}

namespace com.ibm.streamsx.bytes.sample ;

use com.ibm.streamsx.bytes::* ;

composite Operators
{
	graph
	/*
	 * Producing data
	 */
		stream<uint64 id, rstring raw> RawData = Beacon(){
//			param
//				iterations:1u;
			output
//				RawData : id=0ul,raw
				RawData : id=0ul,raw
		}

		stream<uint64 id, rstring raw> Data = Custom(RawData){
			logic
				state:{
					mutable list<rstring> data=[];
				}
				onTuple
					RawData:{
						tokenize(raw,"7E",false,false,data);
						for(rstring d in data){
							submit({id=id,raw=d},Data);
						}
					}
		}

		
//		@parallel (width=1)
		stream<uint64 id, rstring raw,map<rstring,rstring> decodedMap> ExtractedDataType  = BytesParser(Data){
			param
				file : "ApplicationID.xml" ;
				id : id ;
				data : raw ;
				decoded:"decodedMap";
		}
		
		stream<uint64 theId, rstring theRaw> DataTyped = Functor(ExtractedDataType){
			output
				DataTyped:theId=(uint64)decodedMap["APPLICATION_ID"],theRaw=raw;
		}
		
//		@parallel (width=1)
		stream<uint64 theId, rstring theRaw,map<rstring,rstring> decodedMap> ExtractedData  = BytesParser(DataTyped){
			param
				file : "header.xml" ;
				id : theId ;
				data : theRaw ;
				decoded:"decodedMap";
		}
//		stream<int32 count> Agg=Aggregate(ExtractedData as Input){
//			window Input:tumbling,time(1);
//			output Agg:count=Count();
//		}
		() as display = FileSink(ExtractedData as Input)
		{
			param
				file : "/dev/stdout" ;
				flush : 1u ;
				writePunctuations : true ;
		}

}


